services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - $PWD/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - db
    networks:
      - local
  
  # web-frontend:
  #   container_name: web
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "4200:4200"
  #   volumes:
  #     - ./frontend:/app
  #   depends_on:
  #     - backend
  #   networks:
  #     - local
    

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./backend:/app
    stdin_open: true
    tty: true
    depends_on:
      - db
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--root-path", "/api/"]
    networks:
      - local
  
  db:
    image: postgres:15
    container_name: db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER-family_db}
      POSTGRES_PASSWORD: ${DB_PASSWORD-family}
      POSTGRES_DB: ${DB_NAME-todo}
    healthcheck:
      test: [ "CMD-SHELL", "su postgres -c \"pg_isready -U ${DATABASE_USER:-family_db}\"" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - todo:/var/lib/postgresql/data
    networks:
      local:

  db_test:
    image: postgres:15
    container_name: db_test
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER_TEST-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD_TEST-postgres}
      POSTGRES_DB: ${DB_NAME_TEST-postgres}
      POSTGRES_PORT: ${DB_PORT_TEST-6000}
    ports:
      - 6000:6000
    volumes:
      - todo_test:/var/lib/postgresql/data
    networks:
      local:

volumes:
  todo:
  todo_test:

networks:
  local:
    driver: bridge
